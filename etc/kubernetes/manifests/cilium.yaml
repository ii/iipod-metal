---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjlqZkdUZjg0TkpLaWs2bjRETWVxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZ3lPREk1V2hjTk1qWXdOakV3TURneQpPREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2Y1aFRBRmZtcDBYSFkwM3R3Q3cyZkVMUEdvMkh0djloRU9CS3pTNE9PeHBHYmFKV1QKM29hVm1DYmtwa3F3WFBpS3M0K0tPUDhsaFFtYlpFTSs3NkcrL3ZmYjFya1JZVk50SGVJN0FoQzdxZjE4QURhTgpmNDZQVU1xV2hWRDNpYlMvOVM1WjM3RG4zVy9hTmRXK0hYSTZTM2gvN2pxSjhTRzQ0NXdxckZxZi9iU2k1RUpLCktXb3JFb0l0VzhBT3Z4SmJSaUxoNnFzODlxQ2tXeGZOcWVJUzNQVDVqcDh0QzdWTmVrV2VibHNwTjJXQXJnZkIKMDY2eWNKRGtKcHZFY1FyeXhEUWJXeUNSUDlxNTc2dnR1U2t5aThkVVMwaTZrZGdURUNySVJmR0lXZlJYdnVVaApXWEVvSG5WTzQ5Z1ZuVG5yR3ZSWUVPdjA0Sm5scWtTMUY0ajdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFbUZFM3VJdmhYVDNNQ0s2bGJkNHJQdkFyZEV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdGdIM1hlZlh5QTRyY1ZubGVXTGxEQTU5dGVUMjhCK0gzdk55R0lyY1l3ZDVhc0tycmkzMVllCkFZdGUxMDBITjUvR0VMc2R4MktKaUR2RVgvSEFUb2dldFZTMUpyRmp3T2FDMWpHTzh6ajk3SDZMeGpGRTNVTSsKdWt0Q3NaVEd4clhPRDdEaVRYL3hGVUdCY3hvcFN3UUs0WnYwczhoRmRnNndWdDQ1THV6REMvanBIbEZKaHdNQgoxVjFMUFpvYWZpRzJhR2R5K014eFlxamxzQTI3cnpiOHZPbDNQQnNvVFN6clRuR3BZQk9vYnZqbjQwQXU1dllWCmloN3d3Z1hMZ0pDVWE0ZEZGQVkzRnNGRDlla05kczBHc1FhY21oMXVZT2phR0lLaVRuc3VTWkp4dWZCWHovNjkKMHdnWVZzNTFheldKdTYxd0daUXVYdXVUeFk2U0M3dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbitZVXdCWDVxZEZ4Mk5ON2NBc05ueEN6eHFOaDdiL1lSRGdTczB1RGpzYVJtMmlWCms5NkdsWmdtNUtaS3NGejRpck9QaWpqL0pZVUptMlJEUHUraHZ2NzMyOWE1RVdGVGJSM2lPd0lRdTZuOWZBQTIKalgrT2oxREtsb1ZROTRtMHYvVXVXZCt3NTkxdjJqWFZ2aDF5T2t0NGYrNDZpZkVodU9PY0txeGFuLzIwb3VSQwpTaWxxS3hLQ0xWdkFEcjhTVzBZaTRlcXJQUGFncEZzWHphbmlFdHowK1k2ZkxRdTFUWHBGbm01YktUZGxnSzRICndkT3VzbkNRNUNhYnhIRUs4c1EwRzFzZ2tUL2F1ZStyN2JrcE1vdkhWRXRJdXBIWUV4QXF5RVh4aUZuMFY3N2wKSVZseEtCNTFUdVBZRlowNTZ4cjBXQkRyOU9DWjVhcEV0UmVJK3dJREFRQUJBb0lCQVFDTEo4WkpRUmF0SnB5bwpzYXdNWDJJMFcybkpabWtVYXRCQTFuZlgxOUVmVVVwbzhJUzBVb1hYN0xsMFpoQThHajBuSUl1OEpFeFFqODVECmtPZEEvM1ZKYmtXdzZkYlgvRmFKY09kd3FTUjgzYnkvek1PdE15U1RMeUdRQzJmaWRkSjYrRnFsVnBwenYyL1gKZk9DT2VydnRaYjd4dnhiczg1Q0FnbjFuV2VYb3M1ZjRJa1lFVWZscWpOT0Z6OThYc2kvanVMQVR4bXRSYWRUMAppU3dCSWRHODExL1NnRkZrR29XUDg4bkovS3lwYlI3K0s0YkdDNC92THo4ZFhGajRVTSs0bC9aQmgwcnVJZSszCld5TTNhUHBaVjNCelJGekxVWmlsTHYwbjNnOGd0aWhYNEpqbXhJSlprQ2NQVFFRT1lFa3pISFd4VlZFQUpxbHIKWHdLVFRsT2hBb0dCQU1xS2NlTitUbVRnL2o5WXlFcDhyR0dVcmJ6QkxHZ2llTDJiM2I3RUZadk03VWRBUGxCSwppYXRKNzhCNzBaZzhLNVgyZzFGanhFRWEyVFcwYnVlclp2ZjFrUzJycDBuWjgxcjdVZDRnQUo2WG9tWm1Ib21PCjExbU9DTk1IdkpLbkE4WkN3cXJGaWlucWF1Q09TNnhPKzVKQ1BZUkxxM1JHVWduWXBNTkU1dU94QW9HQkFNb2EKVnYxczIybVBPanFNL3gvcUgwS1dzMkp3MTUzNUxYbG1XaHhpSWcrNTc1RmlYTVhxekc2N3B2T0IremZwdlRZUQpaOTQ0OVFFcVQwR3IwNFdGdnlPVG5sQlN4K0w5ZFc4K1lIOXYyUnhoV2poQjFPOGI3N0VXZHo1TWNoLzJPOUxOCjQxemgzNzczV00vNG42a2cwUm1YM1R0cTR6dWxmZDg3V3FTb2FiNXJBb0dCQUliZkpESENOUC9XRjFnbGpkS1UKTE5JYUNJdHQ4MTB3djBnNzE3Q2xzR0g4VjNFZjVaN2YwOGI5U0NyY0NOa2dFRUlmVXBqTEg2L2U2ZzlxSklRZQp6a1dGLy9QeW4wWjlYU0VUeEJOdktocHhqUkkxSkZhamlPRzR4RVdLbkZibjRvcU9nRVRwb0RTRFJrSmNYeVhSCnZwSkppOTloNkQxWWFsN21KZWxtSTM0eEFvR0FQUXYvd3NVaThadkY1dkc0RHBmVm9YT0w4K3hKOVBuVGRwd28KRS9MQWZ5ZVc2YjlnYnBnaDhFRFdpUzkyQnNtZjBiamE1eEVsVUpqTEgvY2JDWFlBNm1vb28vS2RWajloUFowRgo0UGlVQ0RLUDRmWmdyMmtzMmIwRGY5bnZqeC85cWd0dTVodUVUbGJBaVBGOHFNVzA0NW92eFViZ0pLQTBpVDJRCmY3UXZYTWtDZ1lBemZzUzlHZEVXa2JpV01SVW8yYUwzWU9Qa1N1cGhwaUNndHpiaWxFYmtaTjZLNXRZQ05odXQKOUxsUU1pS2orY0ZYZUhLTmI4SHprV3U1SngxUzNGVWtoNlNVRHN2dEkxZjNQaE0yRzd4YTVkYnJEQXY4T2luMQpoMVdhNVlVWFpTcWpYVW5uZXdtSkNXQllLWWh2QVRwMFlaVU9GMUpjVVZkQUZIVlpBZ0JKa1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjlqZkdUZjg0TkpLaWs2bjRETWVxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZ3lPREk1V2hjTk1qWXdOakV3TURneQpPREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2Y1aFRBRmZtcDBYSFkwM3R3Q3cyZkVMUEdvMkh0djloRU9CS3pTNE9PeHBHYmFKV1QKM29hVm1DYmtwa3F3WFBpS3M0K0tPUDhsaFFtYlpFTSs3NkcrL3ZmYjFya1JZVk50SGVJN0FoQzdxZjE4QURhTgpmNDZQVU1xV2hWRDNpYlMvOVM1WjM3RG4zVy9hTmRXK0hYSTZTM2gvN2pxSjhTRzQ0NXdxckZxZi9iU2k1RUpLCktXb3JFb0l0VzhBT3Z4SmJSaUxoNnFzODlxQ2tXeGZOcWVJUzNQVDVqcDh0QzdWTmVrV2VibHNwTjJXQXJnZkIKMDY2eWNKRGtKcHZFY1FyeXhEUWJXeUNSUDlxNTc2dnR1U2t5aThkVVMwaTZrZGdURUNySVJmR0lXZlJYdnVVaApXWEVvSG5WTzQ5Z1ZuVG5yR3ZSWUVPdjA0Sm5scWtTMUY0ajdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFbUZFM3VJdmhYVDNNQ0s2bGJkNHJQdkFyZEV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdGdIM1hlZlh5QTRyY1ZubGVXTGxEQTU5dGVUMjhCK0gzdk55R0lyY1l3ZDVhc0tycmkzMVllCkFZdGUxMDBITjUvR0VMc2R4MktKaUR2RVgvSEFUb2dldFZTMUpyRmp3T2FDMWpHTzh6ajk3SDZMeGpGRTNVTSsKdWt0Q3NaVEd4clhPRDdEaVRYL3hGVUdCY3hvcFN3UUs0WnYwczhoRmRnNndWdDQ1THV6REMvanBIbEZKaHdNQgoxVjFMUFpvYWZpRzJhR2R5K014eFlxamxzQTI3cnpiOHZPbDNQQnNvVFN6clRuR3BZQk9vYnZqbjQwQXU1dllWCmloN3d3Z1hMZ0pDVWE0ZEZGQVkzRnNGRDlla05kczBHc1FhY21oMXVZT2phR0lLaVRuc3VTWkp4dWZCWHovNjkKMHdnWVZzNTFheldKdTYxd0daUXVYdXVUeFk2U0M3dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbitZVXdCWDVxZEZ4Mk5ON2NBc05ueEN6eHFOaDdiL1lSRGdTczB1RGpzYVJtMmlWCms5NkdsWmdtNUtaS3NGejRpck9QaWpqL0pZVUptMlJEUHUraHZ2NzMyOWE1RVdGVGJSM2lPd0lRdTZuOWZBQTIKalgrT2oxREtsb1ZROTRtMHYvVXVXZCt3NTkxdjJqWFZ2aDF5T2t0NGYrNDZpZkVodU9PY0txeGFuLzIwb3VSQwpTaWxxS3hLQ0xWdkFEcjhTVzBZaTRlcXJQUGFncEZzWHphbmlFdHowK1k2ZkxRdTFUWHBGbm01YktUZGxnSzRICndkT3VzbkNRNUNhYnhIRUs4c1EwRzFzZ2tUL2F1ZStyN2JrcE1vdkhWRXRJdXBIWUV4QXF5RVh4aUZuMFY3N2wKSVZseEtCNTFUdVBZRlowNTZ4cjBXQkRyOU9DWjVhcEV0UmVJK3dJREFRQUJBb0lCQVFDTEo4WkpRUmF0SnB5bwpzYXdNWDJJMFcybkpabWtVYXRCQTFuZlgxOUVmVVVwbzhJUzBVb1hYN0xsMFpoQThHajBuSUl1OEpFeFFqODVECmtPZEEvM1ZKYmtXdzZkYlgvRmFKY09kd3FTUjgzYnkvek1PdE15U1RMeUdRQzJmaWRkSjYrRnFsVnBwenYyL1gKZk9DT2VydnRaYjd4dnhiczg1Q0FnbjFuV2VYb3M1ZjRJa1lFVWZscWpOT0Z6OThYc2kvanVMQVR4bXRSYWRUMAppU3dCSWRHODExL1NnRkZrR29XUDg4bkovS3lwYlI3K0s0YkdDNC92THo4ZFhGajRVTSs0bC9aQmgwcnVJZSszCld5TTNhUHBaVjNCelJGekxVWmlsTHYwbjNnOGd0aWhYNEpqbXhJSlprQ2NQVFFRT1lFa3pISFd4VlZFQUpxbHIKWHdLVFRsT2hBb0dCQU1xS2NlTitUbVRnL2o5WXlFcDhyR0dVcmJ6QkxHZ2llTDJiM2I3RUZadk03VWRBUGxCSwppYXRKNzhCNzBaZzhLNVgyZzFGanhFRWEyVFcwYnVlclp2ZjFrUzJycDBuWjgxcjdVZDRnQUo2WG9tWm1Ib21PCjExbU9DTk1IdkpLbkE4WkN3cXJGaWlucWF1Q09TNnhPKzVKQ1BZUkxxM1JHVWduWXBNTkU1dU94QW9HQkFNb2EKVnYxczIybVBPanFNL3gvcUgwS1dzMkp3MTUzNUxYbG1XaHhpSWcrNTc1RmlYTVhxekc2N3B2T0IremZwdlRZUQpaOTQ0OVFFcVQwR3IwNFdGdnlPVG5sQlN4K0w5ZFc4K1lIOXYyUnhoV2poQjFPOGI3N0VXZHo1TWNoLzJPOUxOCjQxemgzNzczV00vNG42a2cwUm1YM1R0cTR6dWxmZDg3V3FTb2FiNXJBb0dCQUliZkpESENOUC9XRjFnbGpkS1UKTE5JYUNJdHQ4MTB3djBnNzE3Q2xzR0g4VjNFZjVaN2YwOGI5U0NyY0NOa2dFRUlmVXBqTEg2L2U2ZzlxSklRZQp6a1dGLy9QeW4wWjlYU0VUeEJOdktocHhqUkkxSkZhamlPRzR4RVdLbkZibjRvcU9nRVRwb0RTRFJrSmNYeVhSCnZwSkppOTloNkQxWWFsN21KZWxtSTM0eEFvR0FQUXYvd3NVaThadkY1dkc0RHBmVm9YT0w4K3hKOVBuVGRwd28KRS9MQWZ5ZVc2YjlnYnBnaDhFRFdpUzkyQnNtZjBiamE1eEVsVUpqTEgvY2JDWFlBNm1vb28vS2RWajloUFowRgo0UGlVQ0RLUDRmWmdyMmtzMmIwRGY5bnZqeC85cWd0dTVodUVUbGJBaVBGOHFNVzA0NW92eFViZ0pLQTBpVDJRCmY3UXZYTWtDZ1lBemZzUzlHZEVXa2JpV01SVW8yYUwzWU9Qa1N1cGhwaUNndHpiaWxFYmtaTjZLNXRZQ05odXQKOUxsUU1pS2orY0ZYZUhLTmI4SHprV3U1SngxUzNGVWtoNlNVRHN2dEkxZjNQaE0yRzd4YTVkYnJEQXY4T2luMQpoMVdhNVlVWFpTcWpYVW5uZXdtSkNXQllLWWh2QVRwMFlaVU9GMUpjVVZkQUZIVlpBZ0JKa1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjlqZkdUZjg0TkpLaWs2bjRETWVxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZ3lPREk1V2hjTk1qWXdOakV3TURneQpPREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2Y1aFRBRmZtcDBYSFkwM3R3Q3cyZkVMUEdvMkh0djloRU9CS3pTNE9PeHBHYmFKV1QKM29hVm1DYmtwa3F3WFBpS3M0K0tPUDhsaFFtYlpFTSs3NkcrL3ZmYjFya1JZVk50SGVJN0FoQzdxZjE4QURhTgpmNDZQVU1xV2hWRDNpYlMvOVM1WjM3RG4zVy9hTmRXK0hYSTZTM2gvN2pxSjhTRzQ0NXdxckZxZi9iU2k1RUpLCktXb3JFb0l0VzhBT3Z4SmJSaUxoNnFzODlxQ2tXeGZOcWVJUzNQVDVqcDh0QzdWTmVrV2VibHNwTjJXQXJnZkIKMDY2eWNKRGtKcHZFY1FyeXhEUWJXeUNSUDlxNTc2dnR1U2t5aThkVVMwaTZrZGdURUNySVJmR0lXZlJYdnVVaApXWEVvSG5WTzQ5Z1ZuVG5yR3ZSWUVPdjA0Sm5scWtTMUY0ajdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFbUZFM3VJdmhYVDNNQ0s2bGJkNHJQdkFyZEV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdGdIM1hlZlh5QTRyY1ZubGVXTGxEQTU5dGVUMjhCK0gzdk55R0lyY1l3ZDVhc0tycmkzMVllCkFZdGUxMDBITjUvR0VMc2R4MktKaUR2RVgvSEFUb2dldFZTMUpyRmp3T2FDMWpHTzh6ajk3SDZMeGpGRTNVTSsKdWt0Q3NaVEd4clhPRDdEaVRYL3hGVUdCY3hvcFN3UUs0WnYwczhoRmRnNndWdDQ1THV6REMvanBIbEZKaHdNQgoxVjFMUFpvYWZpRzJhR2R5K014eFlxamxzQTI3cnpiOHZPbDNQQnNvVFN6clRuR3BZQk9vYnZqbjQwQXU1dllWCmloN3d3Z1hMZ0pDVWE0ZEZGQVkzRnNGRDlla05kczBHc1FhY21oMXVZT2phR0lLaVRuc3VTWkp4dWZCWHovNjkKMHdnWVZzNTFheldKdTYxd0daUXVYdXVUeFk2U0M3dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtqU3BzTVdPMkxQKzRSV3pqbUpiNGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE1UQTRNamd6TUZvWERUSTJNRFl4TURBNApNamd6TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdGTlJaOHR2MGpuTTBqblNIVnNVWjlZWDRTYnoKYVFvd3k2emtiNmxFRy9CaUphZW9nTE5INnErWXhzOHlxL3VPOFdZai9XTGI2WGI4aW9xNVZWWm1MZzFRTk5iNwpKbEJZQmwrQmVUSWdiN2x0clJFNTg3a0VuOUtCZjZYUnNQK0lMR1U2U2xzS1YrR3N0RVJ3aWkyOVF6U0lUMEFOCmlXVVE1a0NHUDkyVlFWbXRtYlU3cGhRVSswTkx0OUZmdmdqWk9FK3I3c2dld1BwMDZmbnRFam0wdlVkV3plVzcKZHc4WktjcmZWZFlEdy84YzJLWndDTzFqSTA4Sm40a3l1dzJhSGY3a3dQeEc3TTc3dlVTZnMrSUJFb1JIQjlzNwpLWDVNbFFCTVJVaTJOTFlPTGtxeDRlckh5Y1o1d0lOcXBwcGhJSU11STFaRWlKTHZpZjZLR2hYM2l3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVNZVVRlNGkrRmRQY3dJcnFWdDNpcworOEN0MFRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBR1JrNzNsT0xiRGwzNC9VZzFUQk01TlhjS3Z0VlRKdllDcER1SUFsQTZjYSsxb3YKcHo1d2dkUDV3ZldVcTNEb0c5UzBnczZucldRa3dZOHZmT1NBdXpaTTg1c2toZ2cvMEZSWHFqYkhxSk1Xc050aQpxbk10T29YdGQ5dGsvdmtudURDWDJ0Nm5KWDVZb0g1eWxRTmQ5ZjVXQVZrUTdOVFJ5K3B0M1piTWRiUnVWTHlOClRTTEpRWFhBM0hGQkZEMnhkTC85Q0NPRE5wYWtkTG8xdktQQ0xlV3U2Q0FaRmQ1dytvOGIxK3pycm9iVkszbVcKUUZUTkFqL2I0WFNvUkhMQzlQdGl5K2Y0ZGd5c3ZjTTJUWFNHajRxdDRyRWp6VC9VQ1hLRjU3WEgwbFZYM3VGTQpQUklZZUNDbFdodVZUMHByMVBwNUFXWW5nS2NPN1pxNkg4b3VpQXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd0ZOUlo4dHYwam5NMGpuU0hWc1VaOVlYNFNiemFRb3d5NnprYjZsRUcvQmlKYWVvCmdMTkg2cStZeHM4eXEvdU84V1lqL1dMYjZYYjhpb3E1VlZabUxnMVFOTmI3SmxCWUJsK0JlVElnYjdsdHJSRTUKODdrRW45S0JmNlhSc1ArSUxHVTZTbHNLVitHc3RFUndpaTI5UXpTSVQwQU5pV1VRNWtDR1A5MlZRVm10bWJVNwpwaFFVKzBOTHQ5RmZ2Z2paT0UrcjdzZ2V3UHAwNmZudEVqbTB2VWRXemVXN2R3OFpLY3JmVmRZRHcvOGMyS1p3CkNPMWpJMDhKbjRreXV3MmFIZjdrd1B4RzdNNzd2VVNmcytJQkVvUkhCOXM3S1g1TWxRQk1SVWkyTkxZT0xrcXgKNGVySHljWjV3SU5xcHBwaElJTXVJMVpFaUpMdmlmNktHaFgzaXdJREFRQUJBb0lCQUZDT0ZWaStNeFlBczdPUwpHRm5IWG1Lbm45VGtkYXVYWXh6TVM5b2hNYS9xSFpIY0NZM3VpYjdZMGNyajJqdUM0RHBvSjhibjgyaDBPQTduClQvMVlkTy94RDVreU9udXZ4MDdVRGV6dmUvcVAxa3BaSHNiZ3hma1RPTDU0ZTc0QktjNCtrQTI0MkRvN0FoVjMKWFJQaldKU2Zta0JuZWNRRW12RjJNVVRxMEt0UDVKT2ZpNERaTS9EaUZmQ1Z3TG55MTdyWlB4QkdDVzRsb1FaSApTaytlZ216SXZYYVlRckE0V1pwczUzVWh6bjhmT0dQQ0srTitGQ0tycGZEOEROcWxUdlAzVHBIaUpkU2RSQVczCjNaVmE5eitDK0hvWTVBTGJuK0EreVhCbmFlQi9Ec3ZZVmxSWUhiMVlibUt2UnZ2T2l1RmcyMVJQbHpNYVY5NVkKWTVwczZoRUNnWUVBNWFITExKb2J1RHVoOVord2JkWVc2OGVjbWpZTnRqb2gweWNtVUJHNUZreTYrUkhEK2dtdgpYWVpOV2pxM2MwNjFYalMrM2dNY2ZnRXhWSXhuTnBUbi9aZkhDV0w2L3pvYk1aSGhVd3dNLzV3OUhIUThLb0RtCjBuMkhZQytkWHpucGswVDhmV2srdm1kL1dFbUZheFBvYlZzeGFPYnhVbitUbkF2THdxcVRjcDBDZ1lFQTFtamUKeUV1eW9pYjJhMk9CTWppalZLQmlRQ0hxYSt0eUcrb2E0S0EvL1M0aXo4ZXVHY0pURnFkVDhnMXZoSkZ2ekswWQpSamxIQmJGZHUvaFpNbGh6T2YzMlU3eWFDeHZqMEJ3K1VaL1RQeTFtOTk3TGtXWE5UTTQ4OEtTdmcrVVBjcDhVCkJ3ZE02UUpHSUVLN2JwNFR5M0lZb2VxbStucGpRVWczZjU0UGhrY0NnWUJadm9MV09xQnN2em1MOGs0VWp5QkUKSTY0cmdzYVhHbDhQMC9RZ1JOenVQeXl2bk9iWHVLTkZ6UEE4UEVob0V6SEUwSjVyekJGOW1WKzdLR2hLSjZZSApNU05Eb3VCdmtUa0JoWDduWXdWTmZMVlJnb2ZsSUoyVlZDUHRUbzZWb2QrTWcrQ2Q3dHpyc3kxTXh1Y1NzeVFhCllSS05hZnlVZm5HbEFlTXZnRlRCN1FLQmdBR2xSbWgxSkViWVU3WFpTcW1QQTdubmpUbCt5U1RRNXN4T0RLekMKcmhzTVdwb0xwMHR0VVdQd0h0WFJ3cFJhNVdmRndGVHhwWmptbHBpVnZHR0Zpa1RjclNKUlpVRkdrb1lMWVhNUQo3ZmNqS3hJbDlKd0dFd0JPNk9yVDZNRHpaaDMwR0p4Qk14YnF2STBNMWhGd1J5aWRsSkRSa3p5QzZmWWJUc204CjlkT0xBb0dBVldtcklJOW45VmRFcVVUKy9mYVQraU9CRC9tMzArT2dMZmVEN1k0OWJGOXRkQ1I0aDhBRUFBOXgKTnh6Mjd3U2FMVW1Dcy8wNzZCNGRMM2RUaXVNTE9BVmZ1UTJYeExnVzM2Slgva0xXOTg0NmVGQ2I5aUkycEFiRgpGa2NEWUtuL0NVWFNDVno5YVlrR2MycjBTMlEweUwzZ2U4dnYwMU8xano1dzV0bUw1K009Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjlqZkdUZjg0TkpLaWs2bjRETWVxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZ3lPREk1V2hjTk1qWXdOakV3TURneQpPREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2Y1aFRBRmZtcDBYSFkwM3R3Q3cyZkVMUEdvMkh0djloRU9CS3pTNE9PeHBHYmFKV1QKM29hVm1DYmtwa3F3WFBpS3M0K0tPUDhsaFFtYlpFTSs3NkcrL3ZmYjFya1JZVk50SGVJN0FoQzdxZjE4QURhTgpmNDZQVU1xV2hWRDNpYlMvOVM1WjM3RG4zVy9hTmRXK0hYSTZTM2gvN2pxSjhTRzQ0NXdxckZxZi9iU2k1RUpLCktXb3JFb0l0VzhBT3Z4SmJSaUxoNnFzODlxQ2tXeGZOcWVJUzNQVDVqcDh0QzdWTmVrV2VibHNwTjJXQXJnZkIKMDY2eWNKRGtKcHZFY1FyeXhEUWJXeUNSUDlxNTc2dnR1U2t5aThkVVMwaTZrZGdURUNySVJmR0lXZlJYdnVVaApXWEVvSG5WTzQ5Z1ZuVG5yR3ZSWUVPdjA0Sm5scWtTMUY0ajdBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFbUZFM3VJdmhYVDNNQ0s2bGJkNHJQdkFyZEV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdGdIM1hlZlh5QTRyY1ZubGVXTGxEQTU5dGVUMjhCK0gzdk55R0lyY1l3ZDVhc0tycmkzMVllCkFZdGUxMDBITjUvR0VMc2R4MktKaUR2RVgvSEFUb2dldFZTMUpyRmp3T2FDMWpHTzh6ajk3SDZMeGpGRTNVTSsKdWt0Q3NaVEd4clhPRDdEaVRYL3hGVUdCY3hvcFN3UUs0WnYwczhoRmRnNndWdDQ1THV6REMvanBIbEZKaHdNQgoxVjFMUFpvYWZpRzJhR2R5K014eFlxamxzQTI3cnpiOHZPbDNQQnNvVFN6clRuR3BZQk9vYnZqbjQwQXU1dllWCmloN3d3Z1hMZ0pDVWE0ZEZGQVkzRnNGRDlla05kczBHc1FhY21oMXVZT2phR0lLaVRuc3VTWkp4dWZCWHovNjkKMHdnWVZzNTFheldKdTYxd0daUXVYdXVUeFk2U0M3dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYnViSkVYV2g2UnBva0NmNU9nTEwzREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZ3lPREk1V2hjTk1qWXdOakV3TURneQpPREk1V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdjBSUzJyUjJDTzZDR0M2dXJpY2sKeHcyc0R3eFR1NFFTZHVEdmt1Qkg2WW1zSjdHcEgvbkphbWpoakdSNGlka21JS2k0MUl6bXczS3k0bW5NQ0NmOAp1dGgzaWZOT3J2WWpGNy94RE54b0hDTGRiYnBHNHh1MFZ1b29vU083eEwrOGVlQVRzWjFBbU9pSkJWMXJBWkI2CnRidlNTdHcwT3RaT2MvYk1ZQytXT2E3dkhPKzJiNEZxMlIrL1FhNEdUYm9LZStVelpDNWpDakE3bm4zaElTQncKWFVvcHE4aVZqTVVodDQwTXBwL01BQXhiRFM1UFNlL2ZpaitRR0doNmxZTjlML3JPcm1tNHp6eXZPUGIvcVNPUgpRQzFoNWNtL0t6YlR5elluT2hCK3d0NGxIMFBSWExRS29hRUpsUE4zOEJEZDVIb01ycG1OMW5lamJkM3piL3F0Cnp3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRU1lVVGU0aStGZFBjdwpJcnFWdDNpcys4Q3QwVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDVGtNeDBObDFKY2hSdVZwWnZ0U2Zib3p4NjFTY3UKZUdodVVYemluYTdZY3lCUkhONnFmVGVlbU9KZS9rM0tnNmtkTE85WVRqdXNZUXFKOXRKUzdNODZySWRQYnBNcApFeGF1ekFwV2MwVVgwTGJFVndqY0xEVVdxYzlCVE05UXlqdk1IbWpRS2VPYWlvQjhnMWNEK0lYZlpOWk1qLytYCnI2b0RsbDlTUXZubVZuaU1MeFNYekdqL2xHMlI2Y1pjSDdJK255d21EeWg2TU5GZ3diWU9JN2dWUnRTak03Q0YKT2ZOYUhoTEhsVEZ5M1N0QkhGcXRvOHJCMEpMd2xCcWNMdldsZjgvV3B0bS9Sa25hUXRkR2JDSnlsRWFvcmZxKwpSS1JITXFiTHM3UnFDc3F1T3FtTkVCR0Jyb2lDVHRUTlRtbzBLSXJ1SDhhTytqdDY0Nkk0Nzk3NwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjBSUzJyUjJDTzZDR0M2dXJpY2t4dzJzRHd4VHU0UVNkdUR2a3VCSDZZbXNKN0dwCkgvbkphbWpoakdSNGlka21JS2k0MUl6bXczS3k0bW5NQ0NmOHV0aDNpZk5PcnZZakY3L3hETnhvSENMZGJicEcKNHh1MFZ1b29vU083eEwrOGVlQVRzWjFBbU9pSkJWMXJBWkI2dGJ2U1N0dzBPdFpPYy9iTVlDK1dPYTd2SE8rMgpiNEZxMlIrL1FhNEdUYm9LZStVelpDNWpDakE3bm4zaElTQndYVW9wcThpVmpNVWh0NDBNcHAvTUFBeGJEUzVQClNlL2ZpaitRR0doNmxZTjlML3JPcm1tNHp6eXZPUGIvcVNPUlFDMWg1Y20vS3piVHl6WW5PaEIrd3Q0bEgwUFIKWExRS29hRUpsUE4zOEJEZDVIb01ycG1OMW5lamJkM3piL3F0endJREFRQUJBb0lCQUFYWHZuZ3ozdzh5eWdLWApHbnJ6Y3lvcGZzSU83RmZrRnZST3RzTFQyeDZGT0I4V1RFWlB5UmxaRHRyTkR1bVhHcFVRMG1TYjBValRMaWZBCmQ1MGdLNVpCbXBVNk80TVl2Y1d4OVZraE9vVHhnN1lnWkozM2NMRGZBbEs1MXJpUjZ0NEdQRlBHcS94L3pmKzkKOU5EZGF3STJOSnhZMGJlaWFFOGVrT3UzU0cyR252bnJhUERPWTkwTnZHcVNKYno1S0M2b2ZCTjBJMnBhWjhwZQpzQnRQcHA4MW1CZHFXZDRuTitDalFDSDVhMmVaVWtlV0ZoaGZsdU9DR1l0SUdwV3JyN0JSZlM2ZDRQN1RxZmNXCkJsQ3dreXRkaVpRTTh0d2ZjckwrbnZIL05XN2ZZVUxTM1ZYYUVDRXZDdWhZRXJpM2hJRllMTVJOcXVRVnJGQ28KSkt5Ti9WRUNnWUVBNk15N09qN2ZqSXNuV0xPMWQrd2Z2MVVMYkd3a28yOE94VDcyZ2dxMlNiQXBxeEQ0WEVVdApGUUZiZllDN3VvNFZWTjFDcnpDV3p3ckNQK2dWT0xQVzJ5SUJjR2RmL3l2bldoR2Jsamo4RFY1SEQzeEhlMGNnCjNBc3Z4T3g0dVN0c1ZnRGkxYm9TZjU2MzVBU2NJam4waVVYeDRYUGoyOU9oeGdmM1dHVTVnUlVDZ1lFQTBsUDkKNXM3RWtGK3ErbFhrRHA4ZlkzaWFnN2RPc0RMUFdhRnpHMURCWGxHSytUdWVzM1lBSWpadTF0c0QzQjdCVlZvUwpTSk5nMU1UczhGMGdJQ2J5UndKUXBCVUlQWU1HZGszNXkwdjdDSjhQWUVabmpTY05LdGVqN2gyL3ZhY3lYZzI5ClNVbzRienRId3F0VEcwejRIVVN0djhGdWNodFFraXJENlBScmhGTUNnWUVBaWRUOVhTVHdrbk9wSGhsNGJjSTkKb2JpbWhORWFlREUrMjRYRnlZU3lITHJTVU5oQlU5QVpPd0NNdktmRmZsUzFTSU9nQWIyUTdKQ0FKZm93NWx1RAo4RVlYK0FjY2pTWGZXakptbmZDck92Y0F0NmhyWWcvZzRxYzA1ekRpNFM5V2V5MFhJRmVFc0U2MnJhZ1ZFU2FqCkk4dG54SVlxK0hJNnE5YjNtVHlGYVdrQ2dZRUFvRWtSL1lzbGtVRFc4OS93NUpPdlFBYncrZUFBUDViNUhiMUUKRTFUL2gvbHNoM05BQmxPdTFtUFZKRGZVUVRQTzhsU3FDbFVHUGgrMDBaaW1tdG9UV0xvUzZuaDh4eVBMRU8xcgpwOXBIZk5KNnpVdmFMbC9NVVJIMUE4bjREWGdWa2tlMk1OdzNGYzEvYW9OVjJrQlY5VGdaa1VEQUFvVithV1hkCjF2SXQzYkVDZ1lCZEVjbzgyV08wL3NLSXJUSnlPaUJUYjlRUXRhMHdFbmViRk0yUFM5cHE4ZnFwOWYySWwya2QKeFh3OFdST1BYMHEwanFHUURYeUx2azZ6SloybjZWQ1JDNG1vendGb0NwWmpTbk5ZVEhaTndDY2hBZm9lK2M1dApJVFVzajA2MDkzRWVuZ1IybDVkNzJ5RDFDOEt4UWlhQlJSUCt5TXF1Z1Q1dHZlNEQwdWpzNnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "never"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  mtu: "1500"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  enable-hubble-open-metrics: "false"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
