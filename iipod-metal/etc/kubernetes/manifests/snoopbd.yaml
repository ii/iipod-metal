---
# Source: snoopdb/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: snoopdb-configuration
  labels:
    helm.sh/chart: snoopdb-1.0.0
    app.kubernetes.io/name: snoopdb
    app.kubernetes.io/instance: snoopdb
    app.kubernetes.io/version: "v20230201-0.2.0-445-g6d6e89d"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  POSTGRES_USER:     YXBpc25vb3A=
  POSTGRES_DB:       YXBpc25vb3A=
  POSTGRES_PASSWORD: PG5pbD4=
  PGUSER:            YXBpc25vb3A=
  PGDATABASE:        YXBpc25vb3A=
---
# Source: snoopdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: snoopdb
  labels:
    helm.sh/chart: snoopdb-1.0.0
    app.kubernetes.io/name: snoopdb
    app.kubernetes.io/instance: snoopdb
    app.kubernetes.io/version: "v20230201-0.2.0-445-g6d6e89d"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: snoopdb
    app.kubernetes.io/instance: snoopdb
---
# Source: snoopdb/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: snoopdb
  labels:
    io.cncf.component-group: apisnoop
    io.cncf.apisnoop-component: snoopdb
    helm.sh/chart: snoopdb-1.0.0
    app.kubernetes.io/name: snoopdb
    app.kubernetes.io/instance: snoopdb
    app.kubernetes.io/version: "v20230201-0.2.0-445-g6d6e89d"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: "snoopdb"
  selector:
    matchLabels:
      io.cncf.component-group: apisnoop
      io.cncf.apisnoop-component: snoopdb
      app.kubernetes.io/name: snoopdb
      app.kubernetes.io/instance: snoopdb
  template:
    metadata:
      labels:
        io.cncf.component-group: apisnoop
        io.cncf.apisnoop-component: snoopdb
        app.kubernetes.io/name: snoopdb
        app.kubernetes.io/instance: snoopdb
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 70
      containers:
        - name: snoopdb
          securityContext:
            null
          image: "gcr.io/k8s-staging-apisnoop/snoopdb:v20230201-0.2.0-445-g6d6e89d"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: snoopdb-configuration
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: snoopdb-configuration
                  key: POSTGRES_USER
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: snoopdb-configuration
                  key: PGDATABASE
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: snoopdb-configuration
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: snoopdb-configuration
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "pg_isready"
                - "-U"
                - "$POSTGRES_USER"
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: var-lib-postgresql
            mountPath: /var/lib/postgresql
          - name: var-run-postgresql
            mountPath: /var/run/postgresql
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-lib-postgresql
          emptyDir: {}
        - name: var-run-postgresql
          emptyDir: {}
---
# Source: snoopdb/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "snoopdb-test-connection"
  labels:
    helm.sh/chart: snoopdb-1.0.0
    app.kubernetes.io/name: snoopdb
    app.kubernetes.io/instance: snoopdb
    app.kubernetes.io/version: "v20230201-0.2.0-445-g6d6e89d"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['snoopdb:5432']
  restartPolicy: Never
