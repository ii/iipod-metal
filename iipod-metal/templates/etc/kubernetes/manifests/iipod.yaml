apiVersion: v1
kind: ServiceAccount
metadata:
  name: iipod
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: environment
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: iipod
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: ttyd
  namespace: default
spec:
  selector:
    app: environment
  ports:
    - name: ttyd
      port: 80
      protocol: TCP
      targetPort: 7681
---
apiVersion: v1
kind: Service
metadata:
  name: emacs
  namespace: default
spec:
  selector:
    app: environment
  ports:
    - name: ttyd
      port: 80
      protocol: TCP
      targetPort: 8085
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: iipod
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: environment
  serviceName: environment
  template:
    metadata:
      labels:
        app: environment
    spec:
      shareProcessNamespace: true
      containers:
        - name: environment
          image: ${iipod_image}
          command:
            - /etc/cloud/coder-init
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            runAsUser: 1001
            runAsGroup: 1000
          env:
            - name: CODER_AGENT_TOKEN
              value: ${coder_agent_token}
            - name: PGUSER
              value: apisnoop
            - name: PGHOST
              value: snoopdb
            - name: SPACE_NAME
              value: ${space_name}
          volumeMounts:
            - mountPath: /run/containerd/containerd.sock
              name: run-containerd-containerd-sock
            - mountPath: /var/run/docker.sock
              name: var-run-docker-sock
            # - mountPath: /tmp
            #   name: tmp
            - mountPath: /etc/cloud
              name: cloud
            # - mountPath: /home/ii
            #   name: home-ii
            - mountPath: /home/iii
              name: home-ii
            - mountPath: /var/run/host
              name: host
            - mountPath: /etc/crictl.yaml
              name: crictl
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      restartPolicy: Always
      serviceAccount: iipod
      serviceAccountName: iipod
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /var/run/docker.sock
            type: Socket
          name: var-run-docker-sock
        - hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
          name: run-containerd-containerd-sock
        - name: tmp
          hostPath:
            path: /tmp
        - name: cloud
          hostPath:
            path: /etc/cloud
        - name: home-ii
          hostPath:
            path: /home/ii
        - name: host
          hostPath:
            path: /
        - name: crictl
          hostPath:
            path: /etc/crictl.yaml
        - name: podlabels
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
---
apiVersion: v1
kind: Service
metadata:
  name: hostvnc
  namespace: default
spec:
  type: ExternalName
  externalName: ${fqdn}
  ports:
    - name: novnc
      port: 80
      protocol: TCP
      targetPort: 6080
